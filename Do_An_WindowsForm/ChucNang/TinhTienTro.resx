<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSend.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4wAAAOMBD+bfpwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOfSURBVFhHxZdb
        aBRXGMeP2Ugp3loLog9BLEKF9slaxdIXRfRFX7zU4o1Qiu2DGkG01NKyzhklKHhJTEAfaqsPpVEoTWZ7
        tdaWGrVqzKWx2t05a9ys5MVrQsxlz/nLWXc3M9/sTGa1lz/8Xma+Ob9vD8P5Zhn7H1PZjln02r+a6C8o
        N228FRXYu+SSuvheB36nNf94oglMMQQ2cIEGLvBgbZtSk3+UvZUdasAUqKP1z5wGIGIk8Dq3EeVJXOYC
        igvgg2tAxc9yIBKTcn27gr5m2FhDn3+q7OnGS6bAKi5wnAvc1Yvn2f43MOecwpiYVJGYVOtyco0pMJ2u
        FTpGHK/yJD7kAj9xgWGnVPNJAlhwUaH8WwlmSURiEk45F0jTNQOzrwfjTIFlpsARbqObCvMYNrCiRWH8
        90/EefnaNpdc8xV1eBLtwss8iarcrxykMkplh8LU0yPiADnMJLZQH9ufwvPcxiJuo5oLXKcP+bHlL+CV
        s8olDpJrdt/E7Kx0901MMwQ2cYHvuMAjWhjER3FgfrNCWcwtzsotiTU+ci7Qp8+EbAP6ZShSEMinCWDx
        HwrP5V4wSlbe6ivXb//pwrbrw4AW+GEIYHWrwgs/eKV59G68fdVfnsMoNKBjJLGRCwwVKSywsROoOOMV
        PoVcs9jVgI6+SA8RzdbrwGu/eV8wipavCth2B7LaxiTqzyaawEzDRqcu3BkH3mxWD8ssmaEySglyTSv1
        uhKNY+LCS/LLMks+pKJilLDtWcINIEtupqJiaPnKEuSacAOoEW9QGWWMJbGiRLkm3AC6jLHMkv1UWpDH
        pNLnPV08BCUMoKbMeSrOoZZeUSWdmA5GH0CFWPJAETmmxAYvGHbwmeFLElVU4x8r8w6V61/P6m+j4kQP
        dlzLeAWjoL+UqMY/jZjhaeBkv2Q1t6CZcDSN91sGPZIARgZQ6Fiyx9XAF3ey8jzlh1NY/msfFRXFNYBC
        J6YaXQ3UpV0N5Jlv3dMfnhkqdWLY2EWXHz2W/Nix/R7xCF3N714ZquQC96jYgXcAjRpreFGhgc/d25/j
        PqvtqmINiOjyPUnMMgRuFJH7D6DAfIMJzJKSWRnF6rrd8kOpJlaXrqCP6FliCDSSBoIHUGAs2clODfQ6
        5GlW07WSljmj/5zkviuzDYQbQH5pkp+xY3eGWM0tyWpTR1hNfCIt8YspsJ4LtJsCc+m98Pl6YBurT//J
        Dqbm0Vv/Tervv8iipR4g4fMY0Q0d2WbL/BcAAAAASUVORK5CYII=
</value>
  </data>
</root>